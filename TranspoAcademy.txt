Transpo Academy

Prof. Felipe da Rosa Oliveira
9 9602-9682

10/09/2018
Java:
Linguagem Programação
	- Proposito Geral;
	- Alto Nivel;
	- Orientada a Objetos;
		- Propriedades 
		- Ações;	
	- Fortemente Tipada;
	- Compilada e Interpretada;

Aula01: 10/09/2018
	Variaveis e Setup Inicial
Aula02: 11/09/2018
	Operadores Matematicos
Aula03: 12/09/2018
	
Variavel:
Nome dado a um endereço de memoria;

variaveis primitivas = armazenam direto na memoria principal;
variaveis objeto = armazenam na memoria heap;

Tamanho		Primitivo	Wrapper
1byte		byte		Byte
		boolean		Boolean

2byte 		short		Short
		char		Character

4bytes 		int		Integer
		float		Float

8 bytes 	long		Long
		double		Double


" Machine Learning
tirar o print e processar a imagem "

Exercicios Aula01
Dado as variaveis abaixo, escreva um programa que apresente o resultado das seguintes operações:
int a = 10;
int b = 9;
int c = 8;

1) Calcule a média dos numeros;
2) Calcule a soma dos numeros;
3) Calcule a soma dos numeros dividios pela media;
4) Calcule o resto da divisao de a por b;
5) Calcule a soma de todos os numeros subtraida o resultado da divisao de c por 4.

Exercicios Aula02

1) Dado um retangulo de base 20 e altura 30. Escreva um programa que calcule e apresente os seguintes valores:
a) A area do retangulo
b) O perimetro do retangulo

2) Dado um circulo de 30cm de diametro. Calcule e apresente o vclor da area deste circulo.

3) Dado as notas 10, 7, 5, 9, 10, 7, 8, 10 , 10,10. Calcule e apresente a soma e a média das notas.

4) Dado que um veiculo percorre uma distancia de 200km em 240min. caclule a velocidade media em km/h

5) Escreva um programa que calcule o valor de 7 elevado na potencia de 5;

6) Utilizando a classe Math, crie um programa que calcule e apresente o maior numero entre 10,20,15;

7) Utilizando a classe Math crie um programa que apresente o valor inteiro referente ao numero 13.36543;

8) Utilizando a calsse Math Crie uym programa e escreva o valor absoluto dos numeros -10, 20, -50 e -1000;


Aula3: 12/09/2018

Conversao String -> Inteiro
Integer.parseInt
Conversao String -> Double
Double.parseDouble
https://docs.oracle.com/javase/8/docs/api/
metodos de conversao
parseInt
toString
valueOf
Cada classe wrapper trabalha conversoes de primitivos para objetos e strings

1) Escreva um programa que solicite dois numeros inteiro e em seguida escreva o valor do maior numero informado. Utilize Math.max.

2) Escreva um programa que solicite 3 numeros reais e em seguida apresente o resultado da media dos numeros informados.

3) Escreva um programa que solicite a idade de um usuario e em seguida apresente a idade do usuario após 20 anos.

4) Escreva um programa que solicite a idade do usuario em anos e apresente o valor da idade informada em meses;(ex. 1ano = 12meses)

5) Escreva um programa que solicite a idade do usuario em dias e em seguida aprense o valor em dias meses e anos. considere que cada mes possui 30 dias e que um ano equivale a 12 meses

6) Escreva um programa que solicite o valor de ium produto e o percentual de desconto, em seuida o programa deve apresentar o valor do desconto e o valor do produto apos a aplicação do desconto.

7) Escreva um programa que solicite 3 notas e em seguida calcule e apresente os seguintes dados:
a) O valor da média
b) O valor da maior nota( Math.max)
c) O valor da menor nota (Math.min)

8) Escreva um programa que solicite a base e a altura de um triangulo e em seguida calcule a area. (b.h)/2

9) Escreva um programa que solicite 3 notas e em seguida calcule a media ponderada aplicando os pesos 2,3,5 respectivamente. Ao final o programa deve apresentar o resultado da media calculada.

10) Escreva um programa que solicite o peso e a altura de uma pessoa e em seguida calcule o IMC desta pessoa. IMC = peso/(altura*altura)

Aula04 - 13/09/2018

////////////////////////////////////////////////////////////////////////////////////////////
Trabalhando com GIT 

// Inicia o Repositorio
git init 
//descobre o status do projeto
git status
//buscar o remoto
git fetch origin master
//importa os dados do remoto
git pull origin master
//cria os ignores
nano .gitignore
//escolhe as pastas que voce quer ignorar no commit
o git ignore adicionar
#eclipse workspace
.metadata
.recommenders
RemoteSystemsTempFiles
bin
.class
ctrl+x  /// salva e volta ao cmd

//verificar os arquivos untracked e colocar os arquivos no stage para comitar depois
git add .
//gravar as alterações no repositorio
git commit -m "Primeiro Commit"
//enviar para o github
git push origin master

**********
Estudar
git Log
git Clone
git Checkout

////////////////////////////////////////////////////////////////////////////////////////////
Operadores Relacionais
>
<
>=
<=
Operadores de Igualdade
!=
==

Operadores Logicos
&&
||
! 	nao
^	ou exclusivo



todas comparações retornam boolean (True or False)

Aula05 14/09/2018
1) Crie um programa que solicite o nome do usuario e emseguida informe a quantidade de letras do nome informado;
2) Crie um programa que solicite 3 notas e em seguida calcule a media das notas. Se a media for maior ou igual a 7 escreva "Aprovado" senao escreva "Reprovado
3) Crie um programa que solicite uma frase e em seguida apresente a frase digita sem as vogais.
4) Escreva um programa que solicite a idade do usuario e em seguida apresente uma mensagem informando se o usuario pode fazer a CNH.
5) Escreva um programa que solicite um numero e em seguida apresente iima mensagem informadno se o umero digitado foi "PAR" ou "IMPAR". Todo numero par deve ter resto da divisao por 2 igual a zero.
 6) Escreva um programa que solicite a idade, a altura e o peso de uma pessoa, em seguida calulce o IMC utilizando a formaula IMC = peso/altura*altura. O programa deve apresentar uma mensagem informadno se o ims esta abaixo, normal ou obeso de acordo com a tabela.
Abaixo 17 = "Muito abaixo do Peso"
17 a 18,49 = "Abaixo do Peso"
18,5 a 24,99 = "peso Normal"
25 a 29,99 = " Acima do Peso"
30 a 34,99 = "Obesidade I"
35 a 39,99 = " Obesidade II (severa)"
Acima 40 = " Obesidade III (morbida)"

7) Escreva um programa que solicite o valor do salario de uma pessoa e calcule o valor do imposto de renda conforme os dados abaixo
Ate 1800. Isento
de 1800,01 até 2400,00 = 7,5%
de 2400,01 ate 3600,00 = 15%
acima de 3600 = 27%


1) Escreva um programa que solicite 2 números para o usuário e em seguida escreva o resultado da multiplicação do primeiro número pelo segundo.
2) Escreva um programa que solicite 3 números para o usuário e em seguida escreva o resultado da soma do primeiro número com o terceiro número  e em seguida multiplique o resultado pelo segundo número informado. Mostre na tela o resultado da aplicação.
3)Escreva um programa que solicite 3 notas de um aluno e em seguida calcule a média das notas. Caso a média seja maior ou igual a 9 escreva Excelente, caso a média seja maior ou igual a 8 e menor que 9 escreva "Muito Bom", caso a nota seja maior ou igual a 6 e menor que 8 escreva "Bom", caso a nota seja menor que 6 escreva "Insuficiente".

4) Crie um programa que solicite 3 notas e em seguida calcule a média das notas. Caso a nota seja maior ou igual a 9 apresente a mensagem "Conceito A", caso a nota seja menor que 9 e maior ou igual a 7 apresente a mensagem "Conceito B", caso a nota seja menor que 7 e maior ou igual a 6 apresente a mensagem "Conceito C",caso a nota seja menor que 6 e maior ou igual a 5 apresente a mensagem "Conceito D", senão apresente a mensagem "Conceito Insuficiente".

5) Crie um  que solicite 5 números para o usuário e em seguida escreva o maior número digitado.

6) Crie um  que solicite 5 números para o usuário e em seguida escreva o menor número digitado.

7) Crie um  que solicite o comprimento das arestas de um triângulo e em seguida escreva uma mensagem informando qual é o tipo d triangulo informado. (Equilátero,isóceles ou escaleno).
Triângulo equilátero: possui os três lados com medidas iguais. 
Triângulo isósceles: possui dois lados com medidas iguais. 
Triângulo escaleno: possui os três lados com medidas diferentes. 


3 Dicas sobre ingles para desenvolvedores


Aula06: 17/09/2018
1) Crie um programa que solicite um numero entre 1 e 12, e em seguida escreva o nome do mês correspondente ao numero digitado. Caso o usuario informe um numero fora do range (1-12) o programa deve apresentar uma mensagem indicando que o numero é Invalido;
2) Escreva um programa que solicite um numero entre 1 e 3 para o usuario. E
Em seguida escreva uma mensagem informando o valor da opção selecionado.
As mensagens devem ser de cordo com a tabela abaixo:
1 - Sacar
2 - Depositar
3 - Verificar Saldo
![1-3] = Opção Invalida

3) Escreva um programa que imprima o resultado da soma dos 50 primeiros numeros
 inteiros positivos
04) Escreva um programa que solicite 3 notas e em seguida calcule e apresente
 o valor da media das notas.
O programa deve ser executado até que a primeira nota tenha um valor negativo
 
06) Escreva um programa que escreva todos os numeros primos entre 1 e 50.
07) Escreva um programa que apresente o menu abaixo para o usuario, 
e apos a escolha do usuario apresente uma mensagem correspondente ao tipo
 de operação selecionado. O programa deve continuar executando até que o usuario 
escolha a opção sair. Caso o usuario escolha uma opção diferente, o programa deve apresentar
a mensagem "Opção Invalida".
1 - Cadastrar Aluno 	-> Escolheu a opção Cadastrar Aluno
2 - cadastrar Professor -> Escolheu a opção Cadastrar Professor
3 - Cadastrar Turma	-> Escolheu a opção Cadastrar Turma
4 - Sair


Aula07 - 18/09/2018 
9 em cada 10 profissionais sao contratados pelo perfil tecnico e demitido pelo comportamental

professor Pierluigi Piazzi

Utilizando o comando for execute os exercicios abaixo:
1) Crie um programa que solicite um numero entre 1 e 20 e em seguida calcule e
apresente o valor do fatorial do numero informado.
2) Crie um programa que apresente os numeros pares entre 100 e 200;
3) Crie um programa que solicite 5 numeros e em seguida escreva o valor do maior numero informado.
4) Crie um programa que solicite 5 numeros e em seguida apresente o valor da soma e da media;
5) Crie um programa que solicite uma frase e em seguida apresente as letras dos indices impares;
6) Crie um programa que solicite uma palavra e em seguida escreva a palavra de forma inversa. (Ex. Felipe => epileF)
7) Cire um programa que imprima os valores abaixo no console:
X
XX
XXX
XXXX
XXXXX

8) Crie um programa que imprima os calores abaixo no console
#####
####
###
##
#

Aula 08 - 19/09/2018


///vetores // array

1) Crie um programa que solicite 10 notas e em seguida calcule 
a media das notas e escreva as notas digitas juntamenteo com o valor da media
2) Crie um programa que crie um array com os valores 1,3,2 e em seguida processe o array para que os valores se posicionem na forma 3,2,1
3) Crie um programa que solicite 5 notas e em seguida apresente o valor da maior nota juntamente com a posição da nota dentro do array.
4) Crie um programa que solicite o nome de 10 pessoas e em seguida apresente os nomes informados na ordem inversa. ( O ultimo nome deve ser o primeiro);

buble sort



Aula 09 - 20/09/2018

Pratica 01) Dada a matriz abaixo, calcule a soma dos valores da sua diagonal principal.
|10,09,08|
|07,09,10|
|10,07,08|

1) Escreva um programa que solicite 3 notas para uma turma de 10 alunos e 
em seguida calcule a média de cada aluno juntamente com a media da turma. 
Ao final o programa deve apresentar as 3 notas do aluno juntamente com sua media
e posteriormente deve apresentar a media final da turma.

2) Data a tabeça abaixo:
	meias	camisas	camisetas
Jan	100	200	150	
Fev	75	26	100
Mar	150	200	250
Abr	50	210	240

Calcule as seguintes operações:
a) A quantidade de peças vendidas
b) A quantidade de meias vendidas
c) A quantidade de peças vendidas mês a mês
d) A quantidade de camisas + a quantidade de camisetas vendidas mês a mês
e) O tipo de peça mais vendida em cada mês.


Aula11 - 24/09/2018
OBjeto  - representação em memória - new
Classe - Especificação do do objeto, todas informações. "Planta da casa"

Objeto
- Caracteristica => Variaveis
- Ações =>métodos

Métodos
Visibilidade | Modificador | Tipo | Nome | (Parametros){
Corpo;
}

Visibilidade: (Caso nao informado é padrão)
padrão: Somente dentro do package
private 
public
protect

Modificador: (Opcional)
static

Tipo: (Obrigatorio)
tipo que o metodo retorna
void > nao retorna nada
String > retorna String
int
...

Nome: (Obrigatorio)
nome do metodo

Parametros: (Opcional)
vai estar dentro dos parenteses()
contem a lista de paramentros | Tipo e nome

Corpo: (Obrigatorio)
vai estar estar dentro das chaves{}
onde é escrito a logica
os comandos a serem executados

Declaração de variaveis;
Toda variavel deve começar por letra, um _ ou um $; 
Apartir do segundao caracter por conter letras, 
	numeros ou caracteres de conexao( _, $);
Nao são permitidos caracteres especiais(-, # ,@ ,% ,. , etc);
Deve-se evitar caracteres com acentuação;
Não tem limite de tamanho;
Não podem ser usados nomes de palavras reservadas;

Convenções para a declaração de variáveis e métodos:
Devem ser escritas com letras minusculas;
Caso sejam formadas por palavras compostas, devem seguir padrão CamelCase,
	onde a primeira palavra é definida em minuscula e as demais palavras
	são escritas apenas com a primeira letra Maiscula;
Ex.:
livro;
pessoaFisica;
ComprovatePagamentoPessoaFisica;

01) Crie uma classe "Produto" que possua os atributos nome e preço, 
a classe tambem deve possuir metodos de configuração e acesso para cada um dos atributos.

02) Crie uma classe Veiculo, que possua os atributos:
marca, modelo, cor. anod e fabricação e ano modelo;
A classe tambem deve possuir metodos de configuração e acesso para cada um dos 
atributos definidos.

03) Crie uma classe Aluno que deve possuir os atributos
nome, telefone e matricula
A classe tambem deve possuir metodos de configuração e acesso para cada um dos 
atributos definidos.

Aula12- 25/09/2018
Continuação do projeto

Aula13 - 26/09/2018
01) Crie um programa de cadastro de contatos conforme as definições abaixo:
O contato de possuir os seguintes atributos:
id: Integer
nome: String
telefone: String
email: String

O programa deve apresentar opções para:
Cadastrar um novo contato;
Listar os contatos Cadastrados
Realizar a pesquisa de um contato através do nome
Realizar a pesquisa de um contato através do numero de telefone
Todo Contato deve obrigadoriamente possuir um nome com ao menos 3 caracteres
Não deve ser permitida a inclusão de contatos com nome em branco;

O sistema deve ter como base estrutural, o sistema de produtos realizado na aula12;


Aula14 - 27/09/2018
Crie uma aplicação para cadastro de veiculos,
cada veivulo deve possuir as seguintes propriedades:
id: Integer
marca: String
modelo: String
placa: String
anoFabricação: int
anoModelo: ind
cor: String

O sistema deve permitir o cadastro de um novo veiculo,
 a listagem de todos os veiculos, 
a pesquisa de veiculos por marca,
a pesquisa de veiculos por modelo,
a pesquisa de veiculos por placa,
a pesquisa de veiculos por anoFabricação,
e a remoção de veiculos;

marca e modelo são propriedades obrigatorias e 
devem possuir ao menos 3 caracteres nao vazios(espaços);

a placa é uma propriedade obrigatoia e deve
possuir obrigatoriamente 7 caracteres;

O ano de fabricação deve ser maior ou igual a 2000.
O ano modelo não deve ser menor que o ano de fabricação;

Aula 15 - 28/09/2018
Crie um programa para realizar o cadastro de Clientes. 
Cada cliente deve possuir as seguintes propriedades:
int id;
String nome
String email
String telefone
String endereço
String tipo (Silver, Gold, Platinum)

Endereço:
String rua;
int numero;
String complemento;
String bairro;
String cidade;
String cep;
String estado;

O sistema deve permitir o cadastro e listagem de clientes
Filtro de clientes por tipo;
Filtro de clientes por cidade;

O nome do cliente deve possuir ao menos 3 caracteres e
não devem ser permitido cadastro com nome em branco;

Todos os dados do endereço, com excessao do complemento, 
são obrigatorios e nao devem possuir valores em branco.

O Sistema deve permitir exclusão de clientes através
da informação do cliente.

Aula16 - 01/10/2018
Assuntos da Semana:
Herança  ok
Interface
Abstract Class
Static
Final
Polimorfismo ok
É Um ok
Tem Um
Solid

**** 	Construtor
Se nao for definido um construtor
Entao o Java irá criar um construtor pra voce

Construtor sem parametros 
com a visibilidade da classe

Tem o mesmo nome da classe
Não tem tipo de retorno.
Pode ter zero ou mais parametros
e pode ter a visibilidade public, protegida, pacote(default) ou privada.

Crie uma classe Pessoa com os atributos, código e nome, em Seguida
Altere a classe Contato do projeto Aula13 para que use 
a classe Pessoa como Super Classe

Crie um construtor com todos os parametros necessarios para a criação
de um contato e ajuste o codigo para utilizar o novo construtor;


Aula17 - 02/10/2018
Interfaces
Classes Abstratas

Aula18 - 03/10/2018
TDD - testes automatizados

Crie um conversor entre graus Celsius e Fahrenheit, 
o conversor deve ter opções de realizar a conversão entre quaisquer 
um dos dois tipos de escala.
O desenvolvimento deve ser realizado utilizando os conceitos TDD.

Crie uma calculadora de Descontos seguindo as seguintes regras:
Valores negativos devem retornar zero;
Valores positivos ate 1800 devem retornar exatamente o valor informado
Valores entre 1800,01 e 2400 devem retornar o valor informado aplicando
um desconto de 5%;
Valores entre 2400,01 e 3599,99 devem retornar o valor informado aplicando
um desocnto de 22%;
Valores a partir de 3600 devem retornar o valor informado aplicando um 
desconto de 32%;

Aula19 - 04/10/2018
	
Calendar 
DateFormat
NumberFormat

Aula20 - 05/10/2018
Apresentação Artigo
Class Date
Class Calendar
Class DataFormat
Class NumberFormat
Class Locale

Proximos Assuntos

new DateTime API
Final
Colletions
	List
	Map
	Set
Lambda
Stream
JDBK
JPA/Hibernate
JSF
JAX-RS
Manipularção de Arquivos
	Texto
	Binario
Banco De Dados
Padrões de Projeto
SOLID
Arq. Transpo

Aula21 - 08/10/2018
	
Thwoable 	
	Error
	Exception
		RunTimeException
//Thwoable 	 Classe mae dos erros e excessoes
		 Duas filhas Error e Exception
Error, 
O programador não deve tentar tratar.
Geralmente são problemas de memoria, e nao de codigo.
Exceptions
É obrigátorio o tratamento, (Try Catch) ou declarar (Throws)
	Filhas diretas, Exception Checkeds, o Java solicita o tratamento.
RunTimeException é UnChecked
	Acontecem em tempo de execução


java.lang.IllegalArgumentException
	Indica que um argumento ou parametro indicado é ilegal ou inapropriado
	para o metodo utilizado
java.lang.IllegalStateException
	Foi invocado um metodo ou ação Ilegal ou no tempo errado.
	ou o objeto nao esta preparado para a ação.
	Informado parametros errados de um objeto
java.lang.ArrayIndexOutOfBoundsException
	Indica a tentativa de acessar um index errado de um Array
	Numeros negativos ou maiores que o tamanho do Array
java.lang.NullPointerException
	A Excessao é lançada quando tentamos acessar um Objeto Null:
		Instanciando um metodo de um objeto Null
		Acessando ou modificando um campo de objeto Null
		Acessando ou modificando objetos null de um array
java.sql.SQLException
	A classe informa sobre erros no acesso ao Banco de Dados
java.io.IOException
	A classe informa que ocorreu uma excessao produzida por falha ou interrupção de uma operação IO
java.io.FileNotFoundException
	A Classe informa que ocorreu uma falha ao acessar um arquivo. 
	Nome, Local ou tipo de arquivo Invalido ou inacessivel
	FileInputStream, FileOutputStream, and RandomAccessFile


Aula22 - 09/10/2018
LIST
O faz a interface, pra que serve
principais suubclasses que implementam:

ArrayList
LinkedList
Vector

Collections
LIST
uma coleção de ordenação. dá ao usuario controle preciso dos elementos de uma lista. Pode acessar os elemetos pela posição da lista e pesquisar elementos na lista;

Diferente dos conjuntos, as listas permitem elementos duplicados, permitindo multiplos elementos nulos. Podem conter pares de elementos iguais, e caso o usuario queira restringir para que não haja é possivel atraves de lançamento de excessões em tempo de execução(RunTimeExceptions)

Fornece quatro métodos para acesso possicional aos elementos.

A interface List fornece um iterador especial, chamado ListIterator, que permite a inserção e a substituição de elementos, além do acesso bidirecional, além das operações normais que a interface Iterator fornece. Um método é fornecido para obter um iterador de lista que inicia em uma posição especificada na lista

A interface List fornece dois métodos para inserir e remover com eficiência vários elementos em um ponto arbitrário da lista

algumas implementações proíbem elementos nulos e algumas têm restrições sobre os tipos de seus elementos. A tentativa de adicionar um elemento não elegível gera uma exceção não verificada, normalmente NullPointerException ou ClassCastException

Nota: Embora seja permitido que as listas se contenham como elementos, recomenda-se extrema cautela: os métodos equals e hashCode não são mais bem definidos nessa lista.
    

* ARRAYLIST
Implementando todas as operações de List, o ArrayList permite  metodods de manipular o tamanho da matriz que guardará a lista, Parecida com o Vector o ArrayList não está sincronizada. as Operações size, isEmpety, get, set, iterator e listIterator são executadas constantementes, A operação add é executado em tempo constante conforme a quantidade de itens a adicionar, e as demais operações sao executadas em tem linear.
Sua capacidade é modificada conforme a quantidade de itens da lista. Podendo te aplicativos que aumente a capacidade de uma ArrayList antes de adicionar os itens da lista usando o ensureCapacity.


principais metodos: add(), clear(), ensureCapacity() get(), set(), indexOf(), isEmpty(), listInterator(), remove(), size(), sort(), toArray(), subList()

Os iteradores retornados pelos métodos iterator e listIterator dessa classe são fail-fast: se a lista for estruturalmente modificada a qualquer momento após a criação do iterador, de qualquer forma, exceto pelos métodos remove ou add do iterador, o iterador lançará um ConcurrentModificationException. Assim, em face da modificação concorrente, o iterador falha rapidamente e de forma limpa, em vez de arriscar um comportamento arbitrário e não determinístico em um tempo indeterminado no futuro.
o comportamento fail-fast dos iteradores deveria ser usado apenas para detectar bugs

* LINKEDLIST
Implementação da lista duplamente vinculada das interfaces List e Deque. Todas as operações funcionam como poderia ser esperado para uma lista duplamente vinculada. As operações indexadas na lista percorrerão a lista do início ou do fim, o que estiver mais próximo do índice especificado. Permite a adicção e remoção de dados nas suas duas extremidades.

Assim como o ArryList ela não é sincronizada, precisando sincronizar caso haja pelo menos uma modificação estrutural(adicionar ou excluir um item da lista)
Os iteradores retornados pelos métodos iterator e listIterator dessa classe são fail-fast: se a lista for estruturalmente modificada a qualquer momento após a criação do iterador, de qualquer forma, exceto pelos métodos remove ou add do iterador, o iterador lançará um ConcurrentModificationException. Assim, em face da modificação concorrente, o iterador falha rapidamente e de forma limpa, em vez de arriscar um comportamento arbitrário e não determinístico em um tempo indeterminado no futuro.
o comportamento fail-fast dos iteradores deveria ser usado apenas para detectar bugs
* VECTOR
A classe Vector implementa uma matriz expansível de objetos. Como uma matriz, ela contém componentes que podem ser acessados usando um índice inteiro. No entanto, o tamanho de um Vetor pode aumentar ou diminuir conforme necessário para acomodar a adição e a remoção de itens após a criação do Vetor.
Cada vetor tenta otimizar o gerenciamento de armazenamento mantendo uma capacidade e um incremento de capacidade. A capacidade é sempre pelo menos tão grande quanto o tamanho do vetor; geralmente é maior porque, à medida que componentes são adicionados ao vetor, o armazenamento do vetor aumenta em partes do tamanho da capacidade Incremento. Um aplicativo pode aumentar a capacidade de um vetor antes de inserir um grande número de componentes; isso reduz a quantidade de realocação incremental.

Os iteradores retornados pelos métodos iterator e listIterator dessa classe são fail-fast: se a lista for estruturalmente modificada a qualquer momento após a criação do iterador, de qualquer forma, exceto pelos métodos remove ou add do iterador, o iterador lançará um ConcurrentModificationException. Assim, em face da modificação concorrente, o iterador falha rapidamente e de forma limpa, em vez de arriscar um comportamento arbitrário e não determinístico em um tempo indeterminado no futuro.
o comportamento fail-fast dos iteradores deveria ser usado apenas para detectar bugs

///////////////
Set
Não permite valores duplicados
TreeSet ordena
HashSet + perfomace e sem ordenação

////////////
MAP
HashMap
Chave + Valor
Permite valores vazios, mas as chaves precisam de valor
Não sao sincronizados
Nao tem ordenação

TreeMap
Tem Ordenação
Não sao sincronizados

HashTable 
nao permite valores vazios
Sincronizado
Thread Safe












